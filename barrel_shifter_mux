module barrel_shifter_mux #(
  parameter BUSWIDTH=32,
  parameter SHIFTWIDTH=5)
  ( input [BUSWIDTH-1:0] data_in,
  input clk,
  input rst_n,
  input rotation,
  input direction,
  input [SHIFTWIDTH-1:0] shift_val,
  output reg [BUSWIDTH-1:0] data_out
);
  
  logic [BUSWIDTH-1 :0] out_int[SHIFTWIDTH:0];
  
  assign out_int[SHIFTWIDTH] = data_in;
  
  always_comb begin
    for(int i=SHIFTWIDTH-1; i>=0; i--) begin
      if(shift_val[i] == 1)
        out_int[i] = out_int[i+1] >> 2**i;
      else
        out_int[i] = out_int[i+1];
    end
  end
  
  always_ff @(posedge clk or negedge rst_n) begin
    if(!rst_n) begin
      data_out <= '0;
    end
    else begin
      data_out <= out_int[0];
    end
  end
      
endmodule